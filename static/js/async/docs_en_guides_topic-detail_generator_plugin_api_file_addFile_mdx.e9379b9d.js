(self.webpackChunk_modern_js_main_doc=self.webpackChunk_modern_js_main_doc||[]).push([["docs_en_guides_topic-detail_generator_plugin_api_file_addFile_mdx"],{70691:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});!function(e,t){for(var a in t)Object.defineProperty(e,a,{enumerable:!0,get:t[a]})}(t,{frontmatter:function(){return n},title:function(){return d},toc:function(){return l},default:function(){return c}});var i=a("9880"),r=a("23169"),n={sidebar_position:4},d="addFile",l=[{text:"type",depth:2,id:"type"},{text:"file",depth:2,id:"file"},{text:"template",depth:2,id:"template"},{text:"templateFile",depth:2,id:"templatefile"},{text:"force",depth:2,id:"force"},{text:"data",depth:2,id:"data"}];function s(e){var t=Object.assign({h1:"h1",a:"a",p:"p",code:"code",div:"div",button:"button",pre:"pre",h2:"h2"},(0,r.useMDXComponents)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.h1,{id:"addfile",children:["addFile",(0,i.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#addfile",children:"#"})]}),"\n",(0,i.jsxs)(t.p,{children:["Add a single file. Use to add a single template file to the ",(0,i.jsx)(t.code,{children:"templates"})," directory or add to a template file directly using templates."]}),"\n",(0,i.jsx)(t.p,{children:"This method can be used with any file type, for file types other than binary, Handlebars render is performed when files are added."}),"\n",(0,i.jsxs)(t.p,{children:["This method is available on the ",(0,i.jsx)(t.code,{children:"onForged"})," time to live API parameter."]}),"\n",(0,i.jsx)(t.p,{children:"Its type is defined as:"}),"\n",(0,i.jsx)(t.div,{className:"language-",children:(0,i.jsxs)(t.div,{className:"modern-code-content",children:[(0,i.jsx)(t.button,{className:"copy"}),(0,i.jsx)(t.pre,{className:"code",children:(0,i.jsx)(t.code,{className:"language-ts",children:"export interface AddFileParams {\n  type: FileType;\n  file: string;\n  template?: string;\n  templateFile?: string;\n  force?: boolean;\n  data?: Record<string, string>;\n}\nexport type ForgedAPI = {\n  addFile: (params: AddFileParams) => Promise<void>;\n  ...\n};\n"})})]})}),"\n",(0,i.jsxs)(t.h2,{id:"type",children:["type",(0,i.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#type",children:"#"})]}),"\n",(0,i.jsxs)(t.p,{children:["File type, specific viewable",(0,i.jsx)(t.a,{href:"/guides/topic-detail/generator/plugin/api/file/introduce",children:"File type"}),"."]}),"\n",(0,i.jsxs)(t.h2,{id:"file",children:["file",(0,i.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#file",children:"#"})]}),"\n",(0,i.jsx)(t.p,{children:"The path to the created target file."}),"\n",(0,i.jsxs)(t.h2,{id:"template",children:["template",(0,i.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#template",children:"#"})]}),"\n",(0,i.jsxs)(t.p,{children:["File template, configuration This field value can be used directly for template render files. The priority is lower than ",(0,i.jsx)(t.code,{children:"templateFile"}),"."]}),"\n",(0,i.jsxs)(t.h2,{id:"templatefile",children:["templateFile",(0,i.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#templatefile",children:"#"})]}),"\n",(0,i.jsxs)(t.p,{children:["Template file, the template file path used for rendering, its value is the relative path of ",(0,i.jsx)(t.code,{children:"templates"}),"."]}),"\n",(0,i.jsxs)(t.h2,{id:"force",children:["force",(0,i.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#force",children:"#"})]}),"\n",(0,i.jsx)(t.p,{children:"Whether to force coverage, when the added file already exists, an error will be reported in conflict by default. When setting this value to true, coverage can be forced."}),"\n",(0,i.jsxs)(t.h2,{id:"data",children:["data",(0,i.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#data",children:"#"})]}),"\n",(0,i.jsx)(t.p,{children:"Handlebars renders data."})]})}var c=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Object.assign({},(0,r.useMDXComponents)(),e.components).wrapper;return t?(0,i.jsx)(t,Object.assign({},e,{children:(0,i.jsx)(s,e)})):s(e)}}}]);