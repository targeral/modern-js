(self.webpackChunk_modern_js_main_doc=self.webpackChunk_modern_js_main_doc||[]).push([["docs_zh_guides_topic-detail_generator_plugin_api_file_addManyFile_mdx"],{99547:function(e,n,a){"use strict";Object.defineProperty(n,"__esModule",{value:!0});!function(e,n){for(var a in n)Object.defineProperty(e,a,{enumerable:!0,get:n[a]})}(n,{frontmatter:function(){return d},title:function(){return s},toc:function(){return r},default:function(){return c}});var t=a("12151"),i=a("23169"),d={sidebar_position:5},s="addManyFile",r=[{text:"type",depth:2,id:"type"},{text:"destination",depth:2,id:"destination"},{text:"templateFiles",depth:2,id:"templatefiles"},{text:"templateBase",depth:2,id:"templatebase"},{text:"fileNameFunc",depth:2,id:"filenamefunc"},{text:"data",depth:2,id:"data"}];function l(e){var n=Object.assign({h1:"h1",a:"a",p:"p",code:"code",div:"div",button:"button",pre:"pre",h2:"h2"},(0,i.useMDXComponents)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"addmanyfile",children:["addManyFile",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#addmanyfile",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["批量添加文件。用于添加 ",(0,t.jsx)(n.code,{children:"templates"})," 目录的多个文件。"]}),"\n",(0,t.jsx)(n.p,{children:"该方法可用于任何文件类型，对于二进制以外的文件类型，添加文件时会进行 Handlebars 渲染。"}),"\n",(0,t.jsxs)(n.p,{children:["该方法可在 ",(0,t.jsx)(n.code,{children:"onForged"})," 生命周期的 ",(0,t.jsx)(n.code,{children:"api"})," 参数上获取。"]}),"\n",(0,t.jsx)(n.p,{children:"其类型定义为："}),"\n",(0,t.jsx)(n.div,{className:"language-",children:(0,t.jsxs)(n.div,{className:"modern-code-content",children:[(0,t.jsx)(n.button,{className:"copy"}),(0,t.jsx)(n.pre,{className:"code",children:(0,t.jsx)(n.code,{className:"language-ts",children:"export interface AddManyFilesParams {\n  type: FileType;\n  destination: string;\n  templateFiles: string[] | (() => string[]);\n  templateBase?: string;\n  fileNameFunc?: (name: string) => string;\n  data?: Record<string, string>; // template data\n}\nexport type ForgedAPI = {\n  addManyFiles: (params: AddManyFilesParams) => Promise<void>;\n  ...\n};\n"})})]})}),"\n",(0,t.jsxs)(n.h2,{id:"type",children:["type",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#type",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["文件类型，具体可查看",(0,t.jsx)(n.a,{href:"/guides/topic-detail/generator/plugin/api/file/introduce#%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B",children:"文件类型"}),"。"]}),"\n",(0,t.jsxs)(n.h2,{id:"destination",children:["destination",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#destination",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"创建的目标文件夹路径。由于是批量添加文件，这里填写需要写入的文件夹路径即可。"}),"\n",(0,t.jsxs)(n.h2,{id:"templatefiles",children:["templateFiles",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#templatefiles",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["模板文件列表。\n该参数支持函数参数，也支持 ",(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/globby",target:"_blank",rel:"noopener noreferrer",children:"globby 正则"}),"。"]}),"\n",(0,t.jsxs)(n.h2,{id:"templatebase",children:["templateBase",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#templatebase",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["模板基础路径。\n模板路径通常为同一个目录下的模板文件，如果渲染结果需要去除掉模板文件前缀目录，可使用该字段。\n模板渲染文件内容将等于 ",(0,t.jsx)(n.code,{children:"templateFiles - templateBase"})]}),"\n",(0,t.jsxs)(n.h2,{id:"filenamefunc",children:["fileNameFunc",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#filenamefunc",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"重命名文件函数，在该函数中将一次传入渲染的文件名称，可在该函数中进行重命名。"}),"\n",(0,t.jsxs)(n.h2,{id:"data",children:["data",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#data",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"Handlebars 渲染数据。"})]})}var c=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,i.useMDXComponents)(),e.components).wrapper;return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(l,e)})):l(e)}}}]);