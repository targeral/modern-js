(self.webpackChunk_modern_js_main_doc=self.webpackChunk_modern_js_main_doc||[]).push([["docs_zh_apis_monorepo_commands_lint_mdx"],{68031:function(e,n,o){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"default",{enumerable:!0,get:function(){return t}});var s,i=o("15169"),r=o("43932"),l=o("9880"),c=o("23169");function d(e){var n=Object.assign({h1:"h1",a:"a",pre:"pre",code:"code",p:"p",ul:"ul",li:"li"},(0,c.useMDXComponents)(),e.components);return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.h1,{id:"lint",children:["lint",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#lint",children:"#"})]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"Usage: modern lint [options] [...files]\n\nlint and fix source files\n\nOptions:\n  --no-fix    disable auto fix source file\n  -h, --help  display help for command\n"})}),"\n",(0,l.jsxs)(n.p,{children:["运行 ",(0,l.jsx)(n.code,{children:"ESLint"})," 检查 monorepo 中代码语法情况， 通长情况下，我们只需要在 ",(0,l.jsx)(n.code,{children:"git commit"})," 阶段通过 ",(0,l.jsx)(n.code,{children:"lint-staged"})," 检查本次提交修改的部分代码。"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"--no-fix"})," 参数设置后可以关闭自动修复 lint 错误代码的能力。"]}),"\n"]})]})}(s=globalThis).__RSPRESS_PAGE_META||(s.__RSPRESS_PAGE_META={}),globalThis.__RSPRESS_PAGE_META["/home/runner/work/modern-js/modern-js/packages/document/main-doc/docs/zh/apis/monorepo/commands/lint.mdx"]={toc:[],title:"lint",frontmatter:{sidebar_position:6}};var t=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,c.useMDXComponents)(),e.components).wrapper;return n?(0,l.jsx)(n,r._(i._({},e),{children:(0,l.jsx)(d,i._({},e))})):d(e)}}}]);