(self.webpackChunk_modern_js_main_doc=self.webpackChunk_modern_js_main_doc||[]).push([["docs_zh_apis_app_runtime_model_use-static-model_mdx"],{46617:function(e,s,n){"use strict";n.r(s),n.d(s,{default:function(){return l}});var d,t=n("15169"),c=n("43932"),i=n("9880"),o=n("23169"),r=n("30176");function a(e){var s=Object.assign({h1:"h1",a:"a",p:"p",code:"code",pre:"pre",h4:"h4",div:"div"},(0,o.useMDXComponents)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s.h1,{id:"usestaticmodel",children:["useStaticModel",(0,i.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#usestaticmodel",children:"#"})]}),"\n","\n",(0,i.jsx)(r.default,{}),"\n",(0,i.jsxs)(s.p,{children:["如果想在组件里以 React Hook 的形式消费某个 Model，并能随时获取到当前最新的状态，但又不希望 Model 状态更新的时候，引起组件的重新渲染，可以使用 ",(0,i.jsx)(s.code,{children:"useStaticModel"}),"。",(0,i.jsx)(s.code,{children:"useStaticModel"})," API 形式上与 ",(0,i.jsx)(s.code,{children:"useModel"})," 完全一致。具体使用请参考 ",(0,i.jsx)(s.a,{href:"/zh/apis/app/runtime/model/use-model",children:(0,i.jsx)(s.code,{children:"useModel"})}),"。"]}),"\n",(0,i.jsxs)(s.p,{children:["为了保证总是能获取到最新状态，注意不要对返回的 ",(0,i.jsx)(s.code,{children:"state"})," 解构。"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-tsx",children:"function App() {\n  // ❌ 不能解构 state，但可以解构 actions。\n  const [{ username }, { logout }] = useStaticModel(userModel);\n\n  // ✅ 这才是正确使用姿势。\n  const [state, { logout }] = useStaticModel(userModel);\n\n  useEffect(() => {\n    state.username;\n  }, []);\n}\n"})}),"\n",(0,i.jsxs)(s.h4,{id:"示例",children:["示例",(0,i.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#示例",children:"#"})]}),"\n",(0,i.jsxs)(s.p,{children:["如下 ",(0,i.jsx)(s.code,{children:"App"})," 组件消费了 ",(0,i.jsx)(s.code,{children:"userModel"})," 的状态，但没有直接在 JSX 里使用。可以发现，",(0,i.jsx)(s.code,{children:"userModel"})," 状态的改变没有必要引起组件重新渲染，这种情况可以使用 ",(0,i.jsx)(s.code,{children:"useStaticModel"})," 进行优化。"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-tsx",children:"function App() {\n  const [state] = useStaticModel(userModel);\n\n  useEffect(() => {\n    // 统计 UV 数据\n    send('pageview', { user: state.user });\n  }, [state]);\n\n  return <div>Hello</div>;\n}\n"})}),"\n",(0,i.jsxs)(s.div,{className:"modern-directive info",children:[(0,i.jsx)(s.div,{className:"modern-directive-title",children:"更多参考"}),(0,i.jsxs)(s.div,{className:"modern-directive-content",children:[(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/guides/topic-detail/model/use-model",children:"使用 Model"})}),"\n"]})]})]})}(d=globalThis).__RSPRESS_PAGE_META||(d.__RSPRESS_PAGE_META={}),globalThis.__RSPRESS_PAGE_META["%2Fhome%2Frunner%2Fwork%2Fmodern-js%2Fmodern-js%2Fpackages%2Fdocument%2Fmain-doc%2Fdocs%2Fzh%2Fapis%2Fapp%2Fruntime%2Fmodel%2Fuse-static-model.mdx"]={toc:[{text:"示例",id:"示例",depth:4}],title:"useStaticModel",frontmatter:{sidebar_position:3,title:"useStaticModel"}};var l=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},s=Object.assign({},(0,o.useMDXComponents)(),e.components).wrapper;return s?(0,i.jsx)(s,(0,c._)((0,t._)({},e),{children:(0,i.jsx)(a,(0,t._)({},e))})):a(e)}}}]);