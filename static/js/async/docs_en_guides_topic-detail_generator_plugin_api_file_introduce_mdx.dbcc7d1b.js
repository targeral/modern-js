(self.webpackChunk_modern_js_main_doc=self.webpackChunk_modern_js_main_doc||[]).push([["docs_en_guides_topic-detail_generator_plugin_api_file_introduce_mdx"],{37258:function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0});!function(e,n){for(var i in n)Object.defineProperty(e,i,{enumerable:!0,get:n[i]})}(n,{frontmatter:function(){return r},title:function(){return l},toc:function(){return c},default:function(){return d}});var t=i("12151"),s=i("23169"),r={sidebar_position:1},l="Introduction",c=[{text:"File type",depth:2,id:"file-type"}];function a(e){var n=Object.assign({h1:"h1",a:"a",p:"p",code:"code",h2:"h2",ul:"ul",li:"li",div:"div",button:"button",pre:"pre"},(0,s.useMDXComponents)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"introduction",children:["Introduction",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#introduction",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["The file operation API can be used in the ",(0,t.jsx)(n.code,{children:"onForged"})," time to live function, which can add, delete and change the current project file."]}),"\n",(0,t.jsx)(n.p,{children:"File operation API related path to fill in the project relative path, generator plugin will automatically add the current project path prefix."}),"\n",(0,t.jsxs)(n.h2,{id:"file-type",children:["File type",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#file-type",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"The generator plugin divides file types into the following categories:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Text files: plain text content files, files that can be templated using handlebars."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Binary files: pictures, audio, video and other files."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.div,{className:"modern-directive warning",children:[(0,t.jsx)(n.div,{className:"modern-directive-title",children:"WARNING"}),(0,t.jsxs)(n.div,{className:"modern-directive-content",children:[(0,t.jsx)(n.p,{children:"The jsx or tsx file using the variable is a binary file, and its syntax conflicts with handlebars render, which will cause the template file failed to create."}),"\n"]})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["JSON files: Files in JSON format, such as ",(0,t.jsx)(n.code,{children:"package.json"}),", ",(0,t.jsx)(n.code,{children:"tsconfig.json"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Text List File: A file consisting of lines of text, such as ",(0,t.jsx)(n.code,{children:".gitignore"}),", ",(0,t.jsx)(n.code,{children:".editorconfig"}),", ",(0,t.jsx)(n.code,{children:".npmrc"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The file manipulation API for the generator plugin will operate on these four file types."}),"\n",(0,t.jsx)(n.p,{children:"Its type is defined as:"}),"\n",(0,t.jsx)(n.div,{className:"language-",children:(0,t.jsxs)(n.div,{className:"modern-code-content",children:[(0,t.jsx)(n.button,{className:"copy"}),(0,t.jsx)(n.pre,{className:"code",children:(0,t.jsx)(n.code,{className:"language-ts",children:"export enum FileType {\n  Text = 'text',\n  Binary = 'binary',\n  Json = 'json',\n  TextRaw = 'textRaw',\n}\n"})})]})})]})}var d=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,s.useMDXComponents)(),e.components).wrapper;return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(a,e)})):a(e)}}}]);