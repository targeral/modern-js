(self.webpackChunk_modern_js_doc_tools_doc=self.webpackChunk_modern_js_doc_tools_doc||[]).push([["docs_en_api_client-api_api-runtime_mdx"],{64183:function(e,n,s){"use strict";s.r(n),s.d(n,{default:function(){return h}});var t,r=s("15169"),a=s("43932"),o=s("9880"),i=s("23169"),d=s("68469");function c(e){var n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",pre:"pre",code:"code"},(0,i.useMDXComponents)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.h1,{id:"runtime-api",children:["Runtime API",(0,o.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#runtime-api",children:"#"})]}),"\n",(0,o.jsx)(n.p,{children:"Modern.js Doc exposes some runtime APIs, which is convenient for you to do some custom logic."}),"\n",(0,o.jsxs)(n.h2,{id:"usepagedata",children:["usePageData",(0,o.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#usepagedata",children:"#"})]}),"\n",(0,o.jsx)(n.p,{children:"Get the data of the current page, and the return value is an object, which contains all the data of the current page."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { usePageData } from '@modern-js/doc-tools/runtime';\n\nfunction MyComponent() {\n  const pageData = usePageData();\n  return <div>{pageData.page.title}</div>;\n}\n"})}),"\n",(0,o.jsxs)(n.h2,{id:"uselang",children:["useLang",(0,o.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#uselang",children:"#"})]}),"\n",(0,o.jsx)(n.p,{children:"Get the current language, the return value is a string, which is the current language."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { useLang } from '@modern-js/doc-tools/runtime';\n\nfunction MyComponent() {\n  const lang = useLang();\n  // lang === 'zh-CN'\n  return <div>{lang}</div>;\n}\n"})}),"\n",(0,o.jsxs)(n.h2,{id:"usedark",children:["useDark",(0,o.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#usedark",children:"#"})]}),"\n",(0,o.jsx)(n.p,{children:"Whether it is dark mode currently, the return value is a boolean value."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { useDark } from '@modern-js/doc-tools/runtime';\n\nfunction MyComponent() {\n  const dark = useDark();\n  return <div>{dark}</div>;\n}\n"})}),"\n",(0,o.jsxs)(n.h2,{id:"usei18n",children:["useI18n",(0,o.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#usei18n",children:"#"})]}),"\n","\n",(0,o.jsx)(d.default,{}),"\n",(0,o.jsxs)(n.h2,{id:"router-hook",children:["Router Hook",(0,o.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#router-hook",children:"#"})]}),"\n",(0,o.jsxs)(n.p,{children:["The framework internally uses and re-exports all APIs of ",(0,o.jsx)(n.code,{children:"react-router-dom"}),", you can use it like this:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"import { useLocation } from '@modern-js/doc-tools/runtime';\n\nfunction MyComponent() {\n  const location = useLocation();\n  return <div>{location.pathname}</div>;\n}\n"})})]})}(t=globalThis).__RSPRESS_PAGE_META||(t.__RSPRESS_PAGE_META={}),globalThis.__RSPRESS_PAGE_META["en%2Fapi%2Fclient-api%2Fapi-runtime.mdx"]={toc:[{text:"usePageData",id:"usepagedata",depth:2},{text:"useLang",id:"uselang",depth:2},{text:"useDark",id:"usedark",depth:2},{text:"useI18n",id:"usei18n",depth:2},{text:"Router Hook",id:"router-hook",depth:2}],title:"Runtime API",frontmatter:{}};var h=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,i.useMDXComponents)(),e.components).wrapper;return n?(0,o.jsx)(n,(0,a._)((0,r._)({},e),{children:(0,o.jsx)(c,(0,r._)({},e))})):c(e)}},68469:function(e,n,s){"use strict";s.r(n),s.d(n,{default:function(){return c}});var t,r=s("15169"),a=s("43932"),o=s("9880"),i=s("23169");function d(e){var n=Object.assign({p:"p",code:"code",pre:"pre"},(0,i.useMDXComponents)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["The framework provides ",(0,o.jsx)(n.code,{children:"useI18n"})," this hook to get the internationalized text, the usage is as follows:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { useI18n } from '@modern-js/doc-tools/runtime';\n\nconst MyComponent = () => {\n  const { t } = useI18n();\n\n  return <div>{t('getting-started')}</div>;\n};\n"})}),"\n",(0,o.jsxs)(n.p,{children:["For better type hinting, you can configure ",(0,o.jsx)(n.code,{children:"paths"})," in tsconfig.json:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "compilerOptions": {\n    "paths": {\n      "i18n": ["./i18n.json"]\n    }\n  }\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"Then use it like this in the component:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { useI18n } from '@modern-js/doc-tools/runtime';\n\nconst MyComponent = () => {\n  const { t } = useI18n<keyof typeof import('i18n')>();\n\n  return <div>{t('getting-started')}</div>;\n};\n"})}),"\n",(0,o.jsxs)(n.p,{children:["This way you get type hints for all literal keys defined in ",(0,o.jsx)(n.code,{children:"i18n.json"}),"."]})]})}(t=globalThis).__RSPRESS_PAGE_META||(t.__RSPRESS_PAGE_META={}),globalThis.__RSPRESS_PAGE_META["en%2Ffragments%2FuseI18n.mdx"]={toc:[],title:"",frontmatter:{}};var c=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,i.useMDXComponents)(),e.components).wrapper;return n?(0,o.jsx)(n,(0,a._)((0,r._)({},e),{children:(0,o.jsx)(d,(0,r._)({},e))})):d(e)}}}]);