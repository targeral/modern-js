(self.webpackChunk_modern_js_builder_doc=self.webpackChunk_modern_js_builder_doc||[]).push([["docs_en_api_builder-instance_mdx~docs_en_api_plugin-core_mdx3"],{85385:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});!function(e,n){for(var t in n)Object.defineProperty(e,t,{enumerable:!0,get:n[t]})}(n,{frontmatter:function(){return r},title:function(){return d},toc:function(){return s},default:function(){return l}});var o=t("12151"),i=t("23169"),r={},d="",s=[];function c(e){var n=Object.assign({p:"p",code:"code",ul:"ul",li:"li",strong:"strong",div:"div",button:"button",pre:"pre"},(0,i.useMDXComponents)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Get the normalized Builder config, this method must be called after the ",(0,o.jsx)(n.code,{children:"modifyBuilderConfig"})," hook is executed."]}),"\n",(0,o.jsxs)(n.p,{children:["Compared with the ",(0,o.jsx)(n.code,{children:"api.getBuilderConfig"})," method, the config returned by this method has been normalized, and the type definition of the config will be narrowed. For example, the ",(0,o.jsx)(n.code,{children:"undefined"})," type of ",(0,o.jsx)(n.code,{children:"config.html"})," will be removed."]}),"\n",(0,o.jsx)(n.p,{children:"It is recommended to use this method to get the Builder config."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Type"})}),"\n"]}),"\n",(0,o.jsx)(n.div,{className:"language-",children:(0,o.jsxs)(n.div,{className:"modern-code-content",children:[(0,o.jsx)(n.button,{className:"copy"}),(0,o.jsx)(n.pre,{className:"code",children:(0,o.jsx)(n.code,{className:"language-ts",children:"function GetNormalizedConfig(): Readonly<NormalizedConfig>;\n"})})]})})]})}var l=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,i.useMDXComponents)(),e.components).wrapper;return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(c,e)})):c(e)}}}]);