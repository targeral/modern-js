"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5424],{44993:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>m});var r=t(52983);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=s(t),m=o,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return t?r.createElement(f,i(i({ref:n},l),{},{components:t})):r.createElement(f,i({ref:n},l))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var s=2;s<a;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},19701:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var r=t(18249),o=(t(52983),t(44993));const a={sidebar_position:6},i=void 0,p={unversionedId:"apis/app/commands/serve",id:"apis/app/commands/serve",title:"serve",description:"Usually use the modern serve command to enable project run in the production environment, and you need to execute the `build' command in advance to build the product.",source:"@site/../../packages/toolkit/main-doc/en/docusaurus-plugin-content-docs/current/apis/app/commands/serve.md",sourceDirName:"apis/app/commands",slug:"/apis/app/commands/serve",permalink:"/v2/en/docs/apis/app/commands/serve",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"apisAppSidebar",previous:{title:"build",permalink:"/v2/en/docs/apis/app/commands/build"},next:{title:"inspect",permalink:"/v2/en/docs/apis/app/commands/inspect"}},c={},s=[],l={toc:s};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"Usage: modern serve [options]\n\nrun server\n\nOptions:\n  -c --config <config>  configuration file path, which can be a relative path or an absolute path\n  -h, --help            show command help\n  --api-only            only run API service\n")),(0,o.kt)("p",null,"Usually use the ",(0,o.kt)("inlineCode",{parentName:"p"},"modern serve")," command to enable project run in the production environment, and you need to execute the ",(0,o.kt)("a",{parentName:"p",href:"/docs/apis/app/commands/build"},"`build'")," command in advance to build the product."),(0,o.kt)("p",null,"By default, the project will run in ",(0,o.kt)("inlineCode",{parentName:"p"},"localhost:8080"),", you can modify the Server port number with ",(0,o.kt)("inlineCode",{parentName:"p"},"server.port"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"export default defineConfig({\n  server: {\n    port: 8081,\n  },\n});\n")))}u.isMDXComponent=!0}}]);