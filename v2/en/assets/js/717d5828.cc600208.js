"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9693],{44993:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>d});var r=t(52983);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),m=c(t),d=a,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return t?r.createElement(f,i(i({ref:n},l),{},{components:t})):r.createElement(f,i({ref:n},l))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},92071:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var r=t(18249),a=(t(52983),t(44993));const o={sidebar_position:2},i=void 0,p={unversionedId:"apis/app/commands/new",id:"apis/app/commands/new",title:"new",description:"The modern new command is used to enable features to an existing project.",source:"@site/../../packages/toolkit/main-doc/en/docusaurus-plugin-content-docs/current/apis/app/commands/new.md",sourceDirName:"apis/app/commands",slug:"/apis/app/commands/new",permalink:"/v2/en/docs/apis/app/commands/new",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"apisAppSidebar",previous:{title:"dev / start",permalink:"/v2/en/docs/apis/app/commands/dev"},next:{title:"test",permalink:"/v2/en/docs/apis/app/commands/test"}},s={},c=[{value:"Add Entry",id:"add-entry",level:3},{value:"Enable Features",id:"enable-features",level:3}],l={toc:c};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"Usage: modern new [options]\n\nExecution Generator in App\n\nOptions:\n  -d, --debug            using debug mode to log something (default: false)\n  -c, --config <config>  set default generator config(json string)\n  --dist-tag <tag>       use specified tag version for its generator\n  --registry             set npm registry url to run npm command\n  -h, --help             show command help\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"modern new")," command is used to enable features to an existing project."),(0,a.kt)("p",null,"For example, add application entry, enable some optional features such as Tailwind CSS, micro frontend, etc."),(0,a.kt)("h3",{id:"add-entry"},"Add Entry"),(0,a.kt)("p",null,"In the project, execute the ",(0,a.kt)("inlineCode",{parentName:"p"},"new")," command to add entries as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ npx modern new\n? \u8bf7\u9009\u62e9\u4f60\u60f3\u8981\u7684\u64cd\u4f5c \u521b\u5efa\u5de5\u7a0b\u5143\u7d20\n? \u521b\u5efa\u5de5\u7a0b\u5143\u7d20 \u65b0\u5efa\u300c\u5e94\u7528\u5165\u53e3\u300d\n? \u8bf7\u586b\u5199\u5165\u53e3\u540d\u79f0 entry\n")),(0,a.kt)("h3",{id:"enable-features"},"Enable Features"),(0,a.kt)("p",null,"In the project, execute the ",(0,a.kt)("inlineCode",{parentName:"p"},"new")," command to enable features as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ npx modern new\n? \u8bf7\u9009\u62e9\u4f60\u60f3\u8981\u7684\u64cd\u4f5c \u542f\u7528\u53ef\u9009\u529f\u80fd\n? \u542f\u7528\u53ef\u9009\u529f\u80fd (Use arrow keys)\n\u276f \u542f\u7528 Tailwind CSS \u652f\u6301\n  \u542f\u7528\u300cBFF\u300d\u529f\u80fd\n  \u542f\u7528\u300c\u5fae\u524d\u7aef\u300d\u6a21\u5f0f\n  \u542f\u7528\u300c\u5355\u5143\u6d4b\u8bd5 / \u96c6\u6210\u6d4b\u8bd5\u300d\u529f\u80fd\n  \u542f\u7528\u300cVisual Testing (Storybook)\u300d\u6a21\u5f0f\n")),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"The ",(0,a.kt)("inlineCode",{parentName:"p"},"--config")," parameter needs to use a JSON string."),(0,a.kt)("p",{parentName:"admonition"},"pnpm does not support the use of JSON strings as parameter values currently. Use ",(0,a.kt)("inlineCode",{parentName:"p"},"npm new")," to turn on.\u3010",(0,a.kt)("a",{parentName:"p",href:"https://github.com/pnpm/pnpm/issues/3876"},"Relate Issue"),"\u3011")))}u.isMDXComponent=!0}}]);